/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
eval("const appID = \"4afc0e7848e13a7ccc62b3be90d8b38f\"\r\n\r\nconst form = document.querySelector(\"form\")\r\nform.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    const location = document.querySelector(\"#location-input\")\r\n    main(location.value)\r\n    form.reset()\r\n})\r\n\r\nconst infoCardVisibility = (visibility) => {\r\n    const infoCard = document.querySelector(\".info-card\")\r\n    infoCard.style.visibility = visibility ? \"visible\" : \"hidden\"\r\n}\r\n\r\nconst weatherCardVisibility = (visibility) => {\r\n    const cards = document.querySelectorAll(\".weather-card\")\r\n    cards.forEach(card => {\r\n        card.style.visibility = visibility ? \"visible\" : \"hidden\"\r\n    })\r\n}\r\n\r\ninfoCardVisibility(false)\r\nweatherCardVisibility(false)\r\n\r\nconst updateInfoCard = (info) => {\r\n    const infoCardText = document.querySelector(\".info-card-text\")\r\n    infoCardText.innerText = info\r\n}\r\n \r\nlet weatherTempKelvin\r\n\r\nconst kelvinToCelsius  = (k) => (k - 273.15).toFixed(1) + \"°C\"\r\n\r\nconst kelvinToFahrenheit = (k) => (k * 9/5 - 459.67).toFixed(1) + \"°F\"\r\n\r\nconst updateWeatherTemp = (temp) => {\r\n    let temperature = document.querySelector(\"#weather-temperature\")\r\n    temperature.innerText = temp\r\n}\r\n\r\nconst updateWeatherText = (txt) => {\r\n    let text = document.querySelector(\"#weather-text\")\r\n    text.innerText = txt.charAt(0).toUpperCase() + txt.slice(1)\r\n}\r\n\r\nconst updateWeatherImage = (img) => {\r\n    let image = document.querySelector(\"#weather-image\")\r\n    image.src = img\r\n}\r\n\r\nconst updateWeatherHumidity = (hum) => {\r\n    let humidity = document.querySelector(\"#weather-humidity\")\r\n    humidity.innerText = hum + \"%\"\r\n}\r\n\r\nconst toggleError = (err) => {\r\n    const location = document.querySelector(\"#location-input\")\r\n    \r\n    if(err) location.classList.add(\"is-invalid\")\r\n    else location.classList.remove(\"is-invalid\")\r\n}\r\n\r\n// Button handler for temperature unit toggle.\r\n$(function() {\r\n    $('#temp-toggle').change(function() {\r\n        let state = $(this).prop('checked')\r\n        let temp\r\n\r\n        if(state) temp = kelvinToCelsius(weatherTempKelvin)\r\n        else temp = kelvinToFahrenheit(weatherTempKelvin)\r\n\r\n        updateWeatherTemp(temp)\r\n    })\r\n})\r\n\r\nconst getWeatherJSON = async (location) => {\r\n    const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${appID}`)\r\n    const responseJson = await response.json()\r\n\r\n    if(response.status != 200) throw response.status\r\n    else return responseJson\r\n}\r\n\r\nconst getWeatherData = async (weatherJSON) => {\r\n    weatherTempKelvin = weatherJSON.main.temp\r\n    const weatherDesc = weatherJSON.weather[0].description\r\n    const weathericon = weatherJSON.weather[0].icon\r\n    const weatherHumid = weatherJSON.main.humidity\r\n    const iconPng = await fetch(\"http://openweathermap.org/img/wn/\" + weathericon + \"@2x.png\")\r\n    const iconPngUrl = iconPng.url\r\n\r\n    if(iconPng.status != 200) throw iconPng.status\r\n    else return {weatherDesc, weatherHumid, iconPngUrl}\r\n}\r\n\r\nconst updateDOM = async (weatherData) => {\r\n    infoCardVisibility(true)\r\n    weatherCardVisibility(true)\r\n\r\n    updateInfoCard(weatherData.location)\r\n\r\n    updateWeatherTemp(kelvinToCelsius(weatherTempKelvin))\r\n    updateWeatherText(weatherData.weatherDesc)\r\n    updateWeatherImage(weatherData.iconPngUrl)\r\n    updateWeatherHumidity(weatherData.weatherHumid)    \r\n}\r\n\r\nconst main = async (location) => {\r\n    try\r\n    {\r\n        toggleError(false)\r\n        let weatherJson = await getWeatherJSON(location)\r\n        let weatherData = await getWeatherData(weatherJson)\r\n        weatherData = {...weatherData, location}\r\n        updateDOM(weatherData)\r\n    }\r\n    catch(err) \r\n    {\r\n        console.log(err)\r\n        toggleError(true)\r\n    }\r\n}\n\n//# sourceURL=webpack://y/./src/index.js?");
/******/ })()
;